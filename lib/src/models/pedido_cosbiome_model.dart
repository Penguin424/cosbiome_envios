///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class PedidoCosbiomeModelDireccion {
/*
{
  "tipo": "",
  "domicilio": "RICARDO SALGADO 701",
  "colonia": "SAN FRANCISCO",
  "ciudad": "MEOQUI",
  "estado": "CHIHUAHUA",
  "codigoPostal": "33130",
  "cruces": "."
} 
*/

  String? tipo;
  String? domicilio;
  String? colonia;
  String? ciudad;
  String? estado;
  String? codigoPostal;
  String? cruces;

  PedidoCosbiomeModelDireccion({
    this.tipo,
    this.domicilio,
    this.colonia,
    this.ciudad,
    this.estado,
    this.codigoPostal,
    this.cruces,
  });
  PedidoCosbiomeModelDireccion.fromJson(Map<String, dynamic> json) {
    tipo = json['tipo']?.toString();
    domicilio = json['domicilio']?.toString();
    colonia = json['colonia']?.toString();
    ciudad = json['ciudad']?.toString();
    estado = json['estado']?.toString();
    codigoPostal = json['codigoPostal']?.toString();
    cruces = json['cruces']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['tipo'] = tipo;
    data['domicilio'] = domicilio;
    data['colonia'] = colonia;
    data['ciudad'] = ciudad;
    data['estado'] = estado;
    data['codigoPostal'] = codigoPostal;
    data['cruces'] = cruces;
    return data;
  }
}

class PedidoCosbiomeModelProductosCompra {
/*
{
  "producto": "LIGHT ABRASION CREAM 250 GR  COSBIOME",
  "cantidad": "1",
  "precio": 592.8
} 
*/

  String? producto;
  String? cantidad;
  double? precio;

  PedidoCosbiomeModelProductosCompra({
    this.producto,
    this.cantidad,
    this.precio,
  });
  PedidoCosbiomeModelProductosCompra.fromJson(Map<String, dynamic> json) {
    producto = json['producto']?.toString();
    cantidad = json['cantidad']?.toString();
    precio = (double.parse(json['precio'].toString())).toDouble();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['producto'] = producto;
    data['cantidad'] = cantidad;
    data['precio'] = precio;
    return data;
  }
}

class PedidoCosbiomeModel {
/*
{
  "abono": false,
  "apartado": 0,
  "estatus": "ENTREGADO",
  "ENVIO": "ENVIOMAQUINA",
  "peso": "0kg",
  "sucursal": "FEDERALISMO",
  "_id": "63e3e59ad301173ed3269e8e",
  "published_at": "2023-02-08T15:06:11.280Z",
  "procesoList": [
    true
  ],
  "vendedor": "Angelica Valadez",
  "total": 1151,
  "subTotal": 1151,
  "referencia": "",
  "productosCompra": [
    {
      "producto": "LIGHT ABRASION CREAM 250 GR  COSBIOME",
      "cantidad": "1",
      "precio": 592.8
    }
  ],
  "numTel": "6391186030",
  "nota": "** APLICAR 5%\n**ENVIO PAGADO \n**SOLICITA QUE SE LE ENVIÃ‰ SU DIPLOMA** ",
  "nombreCliente": "ABRIL SOTO",
  "metodoDePago": "Trasferencia",
  "medio": "salida",
  "iva": 0,
  "idPedido": "6178P",
  "idFirebase": "",
  "idCliente": "",
  "horaVenta": "12:10:34 PM",
  "fechaVenta": "02/08/2023",
  "fechaDeEntrega": "2023-02-08",
  "direccion": {
    "tipo": "",
    "domicilio": "RICARDO SALGADO 701",
    "colonia": "SAN FRANCISCO",
    "ciudad": "MEOQUI",
    "estado": "CHIHUAHUA",
    "codigoPostal": "33130",
    "cruces": "."
  },
  "de": "",
  "cargo": 0,
  "autorizado": "",
  "a": "",
  "pagos": "https://cosbiome.s3.us-east-2.amazonaws.com/pagosmaquinas/WhatsApp Image 2023-02-08 at 11.51.24 AM.jpeg",
  "createdAt": "2023-02-08T18:10:34.898Z",
  "updatedAt": "2023-02-11T16:48:57.109Z",
  "id": "63e3e59ad301173ed3269e8e"
} 
*/

  bool? abono;
  double? apartado;
  String? estatus;
  String? ENVIO;
  String? peso;
  String? sucursal;
  String? Id;
  String? publishedAt;
  List<bool?>? procesoList;
  String? vendedor;
  double? total;
  double? subTotal;
  String? referencia;
  List<PedidoCosbiomeModelProductosCompra?>? productosCompra;
  String? numTel;
  String? nota;
  String? nombreCliente;
  String? metodoDePago;
  String? medio;
  double? iva;
  String? idPedido;
  String? idFirebase;
  String? idCliente;
  String? horaVenta;
  String? fechaVenta;
  String? fechaDeEntrega;
  PedidoCosbiomeModelDireccion? direccion;
  String? de;
  double? cargo;
  String? autorizado;
  String? a;
  String? pagos;
  String? createdAt;
  String? updatedAt;
  String? id;

  PedidoCosbiomeModel({
    this.abono,
    this.apartado,
    this.estatus,
    this.ENVIO,
    this.peso,
    this.sucursal,
    this.Id,
    this.publishedAt,
    this.procesoList,
    this.vendedor,
    this.total,
    this.subTotal,
    this.referencia,
    this.productosCompra,
    this.numTel,
    this.nota,
    this.nombreCliente,
    this.metodoDePago,
    this.medio,
    this.iva,
    this.idPedido,
    this.idFirebase,
    this.idCliente,
    this.horaVenta,
    this.fechaVenta,
    this.fechaDeEntrega,
    this.direccion,
    this.de,
    this.cargo,
    this.autorizado,
    this.a,
    this.pagos,
    this.createdAt,
    this.updatedAt,
    this.id,
  });
  PedidoCosbiomeModel.fromJson(Map<String, dynamic> json) {
    abono = json['abono'];
    apartado = json['apartado']?.toDouble();
    estatus = json['estatus']?.toString();
    ENVIO = json['ENVIO']?.toString();
    peso = json['peso']?.toString();
    sucursal = json['sucursal']?.toString();
    Id = json['_id']?.toString();
    publishedAt = json['published_at']?.toString();
    if (json['procesoList'] != null) {
      final v = json['procesoList'];
      final arr0 = <bool>[];
      v.forEach((v) {
        arr0.add(v);
      });
      procesoList = arr0;
    }
    vendedor = json['vendedor']?.toString();
    total = json['total']?.toDouble();
    subTotal = json['subTotal']?.toDouble();
    referencia = json['referencia']?.toString();
    if (json['productosCompra'] != null) {
      final v = json['productosCompra'];
      final arr0 = <PedidoCosbiomeModelProductosCompra>[];
      v.forEach((v) {
        arr0.add(PedidoCosbiomeModelProductosCompra.fromJson(v));
      });
      productosCompra = arr0;
    }
    numTel = json['numTel']?.toString();
    nota = json['nota']?.toString();
    nombreCliente = json['nombreCliente']?.toString();
    metodoDePago = json['metodoDePago']?.toString();
    medio = json['medio']?.toString();
    iva = json['iva']?.toDouble();
    idPedido = json['idPedido']?.toString();
    idFirebase = json['idFirebase']?.toString();
    idCliente = json['idCliente']?.toString();
    horaVenta = json['horaVenta']?.toString();
    fechaVenta = json['fechaVenta']?.toString();
    fechaDeEntrega = json['fechaDeEntrega']?.toString();
    direccion = (json['direccion'] != null)
        ? PedidoCosbiomeModelDireccion.fromJson(json['direccion'])
        : null;
    de = json['de']?.toString();
    cargo = json['cargo']?.toDouble();
    autorizado = json['autorizado']?.toString();
    a = json['a']?.toString();
    pagos = json['pagos']?.toString();
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
    id = json['id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['abono'] = abono;
    data['apartado'] = apartado;
    data['estatus'] = estatus;
    data['ENVIO'] = ENVIO;
    data['peso'] = peso;
    data['sucursal'] = sucursal;
    data['_id'] = Id;
    data['published_at'] = publishedAt;
    if (procesoList != null) {
      final v = procesoList;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v);
      });
      data['procesoList'] = arr0;
    }
    data['vendedor'] = vendedor;
    data['total'] = total;
    data['subTotal'] = subTotal;
    data['referencia'] = referencia;
    if (productosCompra != null) {
      final v = productosCompra;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v!.toJson());
      });
      data['productosCompra'] = arr0;
    }
    data['numTel'] = numTel;
    data['nota'] = nota;
    data['nombreCliente'] = nombreCliente;
    data['metodoDePago'] = metodoDePago;
    data['medio'] = medio;
    data['iva'] = iva;
    data['idPedido'] = idPedido;
    data['idFirebase'] = idFirebase;
    data['idCliente'] = idCliente;
    data['horaVenta'] = horaVenta;
    data['fechaVenta'] = fechaVenta;
    data['fechaDeEntrega'] = fechaDeEntrega;
    if (direccion != null) {
      data['direccion'] = direccion!.toJson();
    }
    data['de'] = de;
    data['cargo'] = cargo;
    data['autorizado'] = autorizado;
    data['a'] = a;
    data['pagos'] = pagos;
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    data['id'] = id;
    return data;
  }
}
